name: Final
on:
  push:
    branches:
      - main
permissions:
  contents: write
jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Run Go tests
      run: |
        go test ./... -v
      
    - name: Get short commit hash
      id: get_hash
      run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
    - name: Get commit message
      id: get_message
      run: echo "message='$(git log -1 --pretty=%B)'" >> $GITHUB_ENV

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: all
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push multi-arch image
      run: |
        docker buildx build \
          --platform linux/amd64,linux/arm64,linux/riscv64,linux/ppc64le,linux/s390x,linux/386,linux/mips64le,linux/mips64,linux/arm/v7,linux/arm/v6 \
          --build-arg CREATED=$(date --iso-8601=s) \
          --build-arg REVISION=${{ env.hash }} \
          -t sbnarra/status-checker:${{ env.hash }} \
          -t sbnarra/status-checker:latest \
          --output type=local,dest=./build \
          --push .

        mkdir -p release
        find build -name status-checker | while read file; do
          cp "$file" "release/$(echo "$file" | sed 's|build/linux_\([^/]*\)/status-checker|status-checker_\1|')"
        done

    - name: Create UI tar.gz archive
      run: tar -czf release/ui.tar.gz ./ui

    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        artifacts: release/*
        tag: ${{ env.hash }}
        name: Release ${{ env.hash }}
        body: |
          Commit: ${{ env.hash }}
          Message: ${{ env.message }}
